<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Metapost on Random Determinism</title>
    <link>https://adityam.github.io/context-blog/tags/metapost/</link>
    <description>Recent content in Metapost on Random Determinism</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 06 Aug 2017 01:34:19 -0400</lastBuildDate>
    
	<atom:link href="https://adityam.github.io/context-blog/tags/metapost/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Drop shadows with lifted corners</title>
      <link>https://adityam.github.io/context-blog/post/drop-shadow-with-lifted-corners/</link>
      <pubDate>Sun, 06 Aug 2017 01:34:19 -0400</pubDate>
      
      <guid>https://adityam.github.io/context-blog/post/drop-shadow-with-lifted-corners/</guid>
      <description>&lt;p&gt;There is an old question on &lt;a href=&#34;https://tex.stackexchange.com/questions/180431/lifted-or-curved-drop-shadow&#34;&gt;TeX.SE&lt;/a&gt; asking how to draw drop shadows with a
&lt;em&gt;lifted&lt;/em&gt; corner. For fun, I decided to translate the code to Metapost and
release it as a module: &lt;a href=&#34;https://github.com/adityam/context-backgrounds&#34;&gt;&lt;code&gt;t-backgrounds&lt;/code&gt;&lt;/a&gt;. I hope to add a few
other backgrounds to the module in the near future.&lt;/p&gt;

&lt;p&gt;The module provides two overlays &lt;code&gt;liftedshadow:big&lt;/code&gt; and &lt;code&gt;liftedshadow:medium&lt;/code&gt;.
These may be used like any other overlay. Let&amp;rsquo;s see an example:&lt;/p&gt;

&lt;img class=&#34;center&#34;
  alt=&#34;{map[src:/context-blog/post/drop-shadow-with-lifted-corners/example.png class:center alt:Simple example]  Page(&amp;#34;Drop shadows with lifted corners&amp;#34;) &amp;lt;nil&amp;gt; true &amp;lt;nil&amp;gt;}&#34;
  src=&#34;https://adityam.github.io/context-blog/context-blog/post/drop-shadow-with-lifted-corners/example.png&#34; /&gt;


&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Metapost and TeX labels</title>
      <link>https://adityam.github.io/context-blog/post/metapost-and-tex-labels/</link>
      <pubDate>Wed, 22 Jan 2014 19:25:23 -0700</pubDate>
      
      <guid>https://adityam.github.io/context-blog/post/metapost-and-tex-labels/</guid>
      <description>&lt;p&gt;Default Metapost has the concept of two types of labels, postscript labels and
TeX labels. Postscript labels are created using&lt;/p&gt;

&lt;!--
label(&#34;text&#34;, location);
--&gt;

&lt;pre&gt;&lt;code&gt;&lt;span class=&#34;Macro&#34;&gt;label&lt;/span&gt;(&lt;span class=&#34;String&#34;&gt;&amp;quot;text&amp;quot;&lt;/span&gt;, location);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;while TeX labels are created using&lt;/p&gt;

&lt;!-- 
label(btex text etex, location);
--&gt;

&lt;pre&gt;&lt;code&gt;&lt;span class=&#34;Macro&#34;&gt;label&lt;/span&gt;(&lt;span class=&#34;Statement&#34;&gt;btex&lt;/span&gt;&lt;span class=&#34;String&#34;&gt; text &lt;/span&gt;&lt;span class=&#34;Statement&#34;&gt;etex&lt;/span&gt;, location);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In the latter case,  Metapost collects everything between &lt;code&gt;btex&lt;/code&gt; and &lt;code&gt;etex&lt;/code&gt;
in a separate file, processes that file through TeX, and includes the
resulting postscript code at an appropriate location. Such a Rube
Golberg-esque mechanism is needed to propertly typeset mathematics, get
proper kerning, etc.; tasks that TeX can do but Postscript cannot.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>